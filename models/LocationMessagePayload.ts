/* tslint:disable */
/* eslint-disable */
/**
 * WhatsAPI Go
 * The V2 of WhatsAPI Go
 *
 * The version of the OpenAPI document: 2.0
 * Contact: manjit@sponsorbook.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocationMessagePayloadLocation } from './LocationMessagePayloadLocation';
import {
    LocationMessagePayloadLocationFromJSON,
    LocationMessagePayloadLocationFromJSONTyped,
    LocationMessagePayloadLocationToJSON,
} from './LocationMessagePayloadLocation';

/**
 * 
 * @export
 * @interface LocationMessagePayload
 */
export interface LocationMessagePayload {
    /**
     * 
     * @type {LocationMessagePayloadLocation}
     * @memberof LocationMessagePayload
     */
    location: LocationMessagePayloadLocation;
    /**
     * 
     * @type {string}
     * @memberof LocationMessagePayload
     */
    to: string;
    /**
     * 
     * @type {string}
     * @memberof LocationMessagePayload
     */
    url?: string;
}

/**
 * Check if a given object implements the LocationMessagePayload interface.
 */
export function instanceOfLocationMessagePayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "to" in value;

    return isInstance;
}

export function LocationMessagePayloadFromJSON(json: any): LocationMessagePayload {
    return LocationMessagePayloadFromJSONTyped(json, false);
}

export function LocationMessagePayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationMessagePayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'location': LocationMessagePayloadLocationFromJSON(json['location']),
        'to': json['to'],
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function LocationMessagePayloadToJSON(value?: LocationMessagePayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'location': LocationMessagePayloadLocationToJSON(value.location),
        'to': value.to,
        'url': value.url,
    };
}

