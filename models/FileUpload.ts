/* tslint:disable */
/* eslint-disable */
/**
 * WhatsAPI Go
 * The V2 of WhatsAPI Go
 *
 * The version of the OpenAPI document: 2.0
 * Contact: manjit@sponsorbook.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileUpload
 */
export interface FileUpload {
    /**
     * 
     * @type {string}
     * @memberof FileUpload
     */
    directPath: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof FileUpload
     */
    fileEncSha256: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof FileUpload
     */
    fileLength: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof FileUpload
     */
    fileSha256: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof FileUpload
     */
    mediaKey: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof FileUpload
     */
    mimeType: string;
    /**
     * 
     * @type {string}
     * @memberof FileUpload
     */
    url: string;
}

/**
 * Check if a given object implements the FileUpload interface.
 */
export function instanceOfFileUpload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "directPath" in value;
    isInstance = isInstance && "fileEncSha256" in value;
    isInstance = isInstance && "fileLength" in value;
    isInstance = isInstance && "fileSha256" in value;
    isInstance = isInstance && "mediaKey" in value;
    isInstance = isInstance && "mimeType" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function FileUploadFromJSON(json: any): FileUpload {
    return FileUploadFromJSONTyped(json, false);
}

export function FileUploadFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileUpload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'directPath': json['direct_path'],
        'fileEncSha256': json['file_enc_sha256'],
        'fileLength': json['file_length'],
        'fileSha256': json['file_sha256'],
        'mediaKey': json['media_key'],
        'mimeType': json['mime_type'],
        'url': json['url'],
    };
}

export function FileUploadToJSON(value?: FileUpload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'direct_path': value.directPath,
        'file_enc_sha256': value.fileEncSha256,
        'file_length': value.fileLength,
        'file_sha256': value.fileSha256,
        'media_key': value.mediaKey,
        'mime_type': value.mimeType,
        'url': value.url,
    };
}

