/* tslint:disable */
/* eslint-disable */
/**
 * WhatsAPI Go
 * The V2 of WhatsAPI Go
 *
 * The version of the OpenAPI document: 2.0
 * Contact: manjit@sponsorbook.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ListSection } from './ListSection';
import {
    ListSectionFromJSON,
    ListSectionFromJSONTyped,
    ListSectionToJSON,
} from './ListSection';

/**
 * 
 * @export
 * @interface ListMessagePayload
 */
export interface ListMessagePayload {
    /**
     * 
     * @type {string}
     * @memberof ListMessagePayload
     */
    buttonText?: string;
    /**
     * 
     * @type {string}
     * @memberof ListMessagePayload
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ListMessagePayload
     */
    multiSelect?: boolean;
    /**
     * 
     * @type {Array<ListSection>}
     * @memberof ListMessagePayload
     */
    sections: Array<ListSection>;
    /**
     * 
     * @type {string}
     * @memberof ListMessagePayload
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof ListMessagePayload
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ListMessagePayload
     */
    to: string;
}

/**
 * Check if a given object implements the ListMessagePayload interface.
 */
export function instanceOfListMessagePayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sections" in value;
    isInstance = isInstance && "to" in value;

    return isInstance;
}

export function ListMessagePayloadFromJSON(json: any): ListMessagePayload {
    return ListMessagePayloadFromJSONTyped(json, false);
}

export function ListMessagePayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListMessagePayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'buttonText': !exists(json, 'button_text') ? undefined : json['button_text'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'multiSelect': !exists(json, 'multi_select') ? undefined : json['multi_select'],
        'sections': ((json['sections'] as Array<any>).map(ListSectionFromJSON)),
        'text': !exists(json, 'text') ? undefined : json['text'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'to': json['to'],
    };
}

export function ListMessagePayloadToJSON(value?: ListMessagePayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'button_text': value.buttonText,
        'description': value.description,
        'multi_select': value.multiSelect,
        'sections': ((value.sections as Array<any>).map(ListSectionToJSON)),
        'text': value.text,
        'title': value.title,
        'to': value.to,
    };
}

