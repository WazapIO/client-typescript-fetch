/* tslint:disable */
/* eslint-disable */
/**
 * WhatsAPI Go
 * The V2 of WhatsAPI Go
 *
 * The version of the OpenAPI document: 2.0
 * Contact: manjit@sponsorbook.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StructsFileUpload } from './StructsFileUpload';
import {
    StructsFileUploadFromJSON,
    StructsFileUploadFromJSONTyped,
    StructsFileUploadToJSON,
} from './StructsFileUpload';
import type { StructsTemplateButton } from './StructsTemplateButton';
import {
    StructsTemplateButtonFromJSON,
    StructsTemplateButtonFromJSONTyped,
    StructsTemplateButtonToJSON,
} from './StructsTemplateButton';

/**
 * 
 * @export
 * @interface StructsTemplateButtonWithMediaPayload
 */
export interface StructsTemplateButtonWithMediaPayload {
    /**
     * 
     * @type {Array<StructsTemplateButton>}
     * @memberof StructsTemplateButtonWithMediaPayload
     */
    buttons: Array<StructsTemplateButton>;
    /**
     * 
     * @type {string}
     * @memberof StructsTemplateButtonWithMediaPayload
     */
    contentText?: string;
    /**
     * 
     * @type {string}
     * @memberof StructsTemplateButtonWithMediaPayload
     */
    footer?: string;
    /**
     * 
     * @type {StructsFileUpload}
     * @memberof StructsTemplateButtonWithMediaPayload
     */
    media: StructsFileUpload;
    /**
     * 
     * @type {string}
     * @memberof StructsTemplateButtonWithMediaPayload
     */
    to: string;
}

/**
 * Check if a given object implements the StructsTemplateButtonWithMediaPayload interface.
 */
export function instanceOfStructsTemplateButtonWithMediaPayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "buttons" in value;
    isInstance = isInstance && "media" in value;
    isInstance = isInstance && "to" in value;

    return isInstance;
}

export function StructsTemplateButtonWithMediaPayloadFromJSON(json: any): StructsTemplateButtonWithMediaPayload {
    return StructsTemplateButtonWithMediaPayloadFromJSONTyped(json, false);
}

export function StructsTemplateButtonWithMediaPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): StructsTemplateButtonWithMediaPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'buttons': ((json['buttons'] as Array<any>).map(StructsTemplateButtonFromJSON)),
        'contentText': !exists(json, 'content_text') ? undefined : json['content_text'],
        'footer': !exists(json, 'footer') ? undefined : json['footer'],
        'media': StructsFileUploadFromJSON(json['media']),
        'to': json['to'],
    };
}

export function StructsTemplateButtonWithMediaPayloadToJSON(value?: StructsTemplateButtonWithMediaPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'buttons': ((value.buttons as Array<any>).map(StructsTemplateButtonToJSON)),
        'content_text': value.contentText,
        'footer': value.footer,
        'media': StructsFileUploadToJSON(value.media),
        'to': value.to,
    };
}

